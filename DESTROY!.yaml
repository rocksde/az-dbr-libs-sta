variables:
  - name: tfVersion
    value: "1.3.6"
  - name: workdir
    value: "$(System.DefaultWorkingDirectory)/tf"
trigger: none
stages:
  - stage: Destroy
    jobs:
      - job: TfDestroy
        displayName: Destroy resources deployment
        pool: "$(TF_VAR_CONTAINER_POOL)"
        variables:
          workingDirectory: "$(workdir)"
          azureServiceConnectionName: "$(TF_VAR_SERVICE_CONNECTION)"
          backendAzureRmStorageAccountName: "$(TF_VAR_STA_NAME)"
          backendAzureRmResourceGroupName: "$(TF_VAR_STA_RSG_NAME)"
          backendAzureRmContainerName: "$(TF_VAR_STA_CONTAINER_NAME)"
        steps:
          - task: TerraformInstaller@0
            displayName: "Install Terraform CLI"
            inputs:
              terraformVersion: $(tfVersion)
          - task: replacetokens@5
            displayName: "generate TF config"
            inputs:
              targetFiles: '**/*.tf'
              encoding: 'auto'
              tokenPattern: 'default'
              writeBOM: true
              actionOnMissing: 'warn'
              keepToken: false
              actionOnNoFiles: 'continue'
              enableTransforms: false
              enableRecursion: false
              useLegacyPattern: false
              enableTelemetry: true
          - task: TerraformTaskV2@2
            displayName: "Terraform init"
            inputs:
              provider: "azurerm"
              command: "init"
              workingDirectory: $(workingDirectory)
              backendServiceArm: ${{ variables.azureServiceConnectionName }}
              backendAzureRmResourceGroupName: $(backendAzureRmResourceGroupName)
              backendAzureRmStorageAccountName: $(backendAzureRmStorageAccountName)
              backendAzureRmContainerName: $(backendAzureRmContainerName)
              backendAzureRmKey: "$(TF_VAR_STA_STATE_FILE)"
          - task: TerraformTaskV2@2
            displayName: "Terraform Destroy"
            inputs:
              provider: "azurerm"
              command: "destroy"
              workingDirectory: "$(workingDirectory)"
              environmentServiceNameAzureRM: ${{ variables.azureServiceConnectionName }}